#!/usr/bin/env python
import rospy

# Because of transformations
import tf_conversions.posemath as pm
import PyKDL

import tf
import geometry_msgs.msg


class ViveTrackerLocalizationBroadcaster:
    def __init__(self):
        rospy.init_node('vive_tracker_to_tf')

        self.transform_listener = tf.TransformListener()
        self.transform_broadcaster = tf.TransformBroadcaster()

        rospy.Subscriber('/vive_tracker',
                         geometry_msgs.msg.PoseStamped,
                         self.handle_vive_tracker_pose)

        rospy.spin()

    def handle_vive_tracker_pose(self, msg):
        try:
            odom_transform = self.transform_listener.lookupTransform(
                '/odom', '/base_footprint', rospy.Time(0))

        except (tf.LookupException, tf.ConnectivityException, tf.ExtrapolationException):
            return

        odom_frame = pm.fromTf(odom_transform)
        parent_frame_id = "map"
        child_frame_id = "odom"
        tracker_frame = pm.fromMsg(msg.pose)
        (map_to_odom_translation, map_to_odom_rotation) = pm.toTf(
            tracker_frame * odom_frame.Inverse())

        self.transform_broadcaster.sendTransform(map_to_odom_translation, map_to_odom_rotation,
                                                 rospy.Time.now(), child_frame_id, parent_frame_id)


if __name__ == '__main__':
    try:
        ViveTrackerLocalizationBroadcaster()
    except rospy.ROSInterruptException:
        pass
