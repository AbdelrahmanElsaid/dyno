<launch>
  <!-- Mock -->
  <node pkg="py_trees_ros" name="move_base" type="mock_component" args="move_base.MoveBase">
      <param name="duration" value="2" />
  </node>

  <node pkg="dyno_behaviours" name="pick_up_parcel_action" type="mock_component" args="quadrotor.PickUpParcel">
      <param name="duration" value="1" />
  </node>

  <node pkg="dyno_behaviours" name="drop_off_parcel_action" type="mock_component" args="quadrotor.DropOffParcel">
      <param name="duration" value="1" />
  </node>

  <!-- World State -->
  <include file="$(find dyno_world_state)/launch/simple.launch"/>

  <!-- Run the map server -->
  <arg name="map_file" default="$(find dyno_localization)/maps/quadrotor.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Web interface bridge -->
  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>

  <!-- Tree -->
  <include file="$(find dyno_behaviours)/launch/quadrotor_parcel_delivery.launch"/>

  <!-- Viz -->
  <node pkg="rqt_py_trees" name="rqt_py_trees" type="rqt_py_trees"/>
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find dyno_viz)/rviz/test_quadrotor_parcel_delivery.rviz"/>
</launch>
